#!/bin/bash

# Color codes
if [[ $COLORTERM = gnome-* && $TERM = xterm ]] && infocmp gnome-256color >/dev/null 2>&1; then
    export TERM=gnome-256color
elif infocmp xterm-256color >/dev/null 2>&1; then
    export TERM=xterm-256color
fi

if tput setaf 1 &> /dev/null; then
    tput sgr0
    if [[ $(tput colors) -ge 256 ]] 2>/dev/null; then
        GREEN=$(tput setaf 46)
        YELLOW=$(tput setaf 190)
        PURPLE=$(tput setaf 141)
        WHITE=$(tput setaf 0)
        BLUE=$(tput setaf 39)
        RED=$(tput setaf 160)
    else
        GREEN=$(tput setaf 2)
        YELLOW=$(tput setaf 3)
        PURPLE=$(tput setaf 1)
        WHITE=$(tput setaf 7)
        BLUE=$(tput setaf 6)
        RED=$(tput setaf 1)
    fi
    BOLD=$(tput bold)
    RESET=$(tput sgr0)
else
    GREEN="\033[1;32m"
    YELLOW="\033[1;33m"
    PURPLE="\033[1;35m"
    WHITE="\033[1;37m"
    BLUE="\033[1;36m"
    BOLD=""
    RESET="\033[m"
    RED="\033[1;31m"
fi

export GREEN
export YELLOW
export PURPLE
export WHITE
export BLUE
export BOLD
export RESET
export RED

function parse_virtualenv()
{
    if test -z "$VIRTUAL_ENV" ; then
      venv=""
    else
      venv="[`basename \"$VIRTUAL_ENV\"`]\n"
    fi
    echo $venv
}

function parse_git_color() {
  ansi=""
  local git_status="`git status -unormal 2>&1`"
  if ! [[ "$git_status" =~ Not\ a\ git\ repo ]]; then
    if [[ "$git_status" =~ nothing\ to\ commit ]]; then
      local ansi=$GREEN
    elif [[ "$git_status" =~ no\ changes\ added\ to\ commit ]]; then
      local ansi=$RED
    else
      local ansi=$YELLOW
    fi
  fi
  echo "${ansi}"
}

function git_prompt ()
{
  if ! git rev-parse --git-dir > /dev/null 2>&1; then
    return 0
  fi

  git_branch=$(git branch 2>/dev/null| sed -n '/^\*/s/^\* //p')

  echo " ${WHITE}[$(parse_git_color)$git_branch${WHITE}]${RESET}"
}



function prompt_command() {
  previous_return_value=$?;
  prompt="\[${BOLD}${YELLOW}\]$(parse_virtualenv)\[${BLUE}\]\u\[${WHITE}\] at \[${BLUE}\]\h\[${WHITE}\] in \[${PURPLE}\]\w\[${WHITE}\]$(git_prompt)\[${RESET}\]"
  if test $previous_return_value -eq 0
  then
      PS1="${prompt}\n> \[${RESET}\]"
  else
      PS1="${prompt}\n\[${RED}\]>\[${RESET}\] "
  fi
  PS2="${YELLOW}â†’ ${RESET}"
}

PROMPT_COMMAND="prompt_command"
