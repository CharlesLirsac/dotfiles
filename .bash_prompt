#!/bin/bash

# Color codes
if [[ $COLORTERM = gnome-* && $TERM = xterm ]] && infocmp gnome-256color >/dev/null 2>&1; then
    export TERM=gnome-256color
elif infocmp xterm-256color >/dev/null 2>&1; then
    export TERM=xterm-256color
fi

if tput setaf 1 &> /dev/null; then
    tput sgr0
    if [[ $(tput colors) -ge 256 ]] 2>/dev/null; then
        GREEN=$(tput setaf 46)
        YELLOW=$(tput setaf 190)
        PURPLE=$(tput setaf 141)
        WHITE=$(tput setaf 0)
        BLUE=$(tput setaf 39)
        RED=$(tput setaf 160)
    else
        GREEN=$(tput setaf 2)
        YELLOW=$(tput setaf 3)
        PURPLE=$(tput setaf 1)
        WHITE=$(tput setaf 7)
        BLUE=$(tput setaf 6)
        RED=$(tput setaf 1)
    fi
    BOLD=$(tput bold)
    RESET=$(tput sgr0)
else
    GREEN="\033[1;32m"
    YELLOW="\033[1;33m"
    PURPLE="\033[1;35m"
    WHITE="\033[1;37m"
    BLUE="\033[1;36m"
    BOLD=""
    RESET="\033[m"
    RED="\033[1;31m"
fi

GIT_PS1_SHOWDIRTYSTATE=1

# Set the full bash prompt.
function set_bash_prompt () {
  # Set the PYTHON_VIRTUALENV variable.
  set_virtualenv

  # Set the bash prompt variable.
  PS1="${BOLD}${YELLOW}${PYTHON_VIRTUALENV}${BLUE}\u${WHITE} at ${BLUE}\h${WHITE} in ${PURPLE}\w${WHITE}$(__git_ps1 "(%s)")${RESET}\n> "
}

# Tell bash to execute this function just before displaying its prompt.
PROMPT_COMMAND=set_bash_prompt
