#!/usr/bin/env zsh

function db () {
  #
  # Start `mysql` or `mycli` from a known config file.
  # Store config files in `$HOME/.dbs` or `$DATABASE_STORE`,
  # they should be source-able exposing the following variables:
  #
  #   `host`
  #   `port`
  #   `username`
  #   `password`
  #   `database`
  #   `driver`
  #
  # `password` and `username` can be empty or missing.
  #
  # To protect the files, use chown / chmod to your own user.

  local loc="${DATABASE_STORE:-$HOME/.dbs}"
  local driver host port databse username password

  function _list() {
    for db_ in ${loc}/*; do
      unset driver host port databse username password
      . $db_
      printf " %7s - %s\n" "${driver:-mysql}" "$(basename $db_)"
    done
  }

  function _help() {
    echo
    echo "Usage: db [CONNECTION-FILE] [OPTIONS]"
    echo
    echo "Options:"
    printf "   %10s   Show this help.\n" "-h, --help"
    printf "   %10s   List all available connection files.\n" "-l"
    echo
    printf "   %10s   (mysql driver) Print connection string.\n" "-p"
    printf "   %10s   Useful for tools like 'mysqldump'.\n" ""
    echo
    printf "   %10s   (pg driver) Specify command to run. Defaults to 'pgsql'.\n" "--cmd"
  }

  if [[ -z "$1" || "$1" == "-h" || "$1" == "--help" ]]; then
    _help
    return 0
  fi

  if [[ -z "$1" || "$1" == "-l" ]]; then
    echo
    echo "Available databases stored in "$(realpath $loc)":"
    echo
    _list
    echo
    return 0
  fi

  db_file="$1"
  shift

  if [ ! -f "$loc/$db_file" ]; then
    echo
    echo "Database $1 can't be found in "$(realpath $loc)"."
    echo "Please choose from:"
    echo
    _list
    echo
    return 1
  fi

  unset driver host port databse username password
  # shellcheck disable=SC1090
  . $loc/$db_file

  if [ "${driver:-mysql}" = "mysql" ]; then
    if [[ "$1" == "-p" ]]; then
      shift
      echo "-h ${host:?} -P ${port:?} -u ${username:-''} --password=${password:-''} $* ${database:?}"
      return 0
    else
      [[ $1 == "-d" ]] && cmd="mysql" && shift || cmd="mycli"
      $cmd  -h "${host:?}" -P "${port:?}" -u "${username:-''}" --password="${password:-''}" "${database:?}"
    fi
  elif [ "${driver:-mysql}" = "pg" ]; then
    # See https://www.postgresql.org/docs/current/static/libpq-envars.html
    # Normally the env variables should not be visible from the outside.
    # [TODO] Could that work with nmysql / mycli rather than build
    # a connection string.
    if [[ "$1" == "--cmd" ]]; then
      shift
      cmd="$1"
      shift
    elif [[ ! -z "$1" ]]; then
      echo "Unrecognized option $1 for driver ${driver}."
      return 1
    else
      cmd="psql"
    fi
    PGPASSWORD="${password:-}" PGUSER="${username:-}" PGPORT="${port:?}" PGDATABASE="${database:-}" PGHOST="${host:?}" "$cmd" "$@"
  else
    echo "Unknown driver ${driver} for ${db_file}. Supports (mysql or pg)."
  fi
}
